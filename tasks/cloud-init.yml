---
- name: "Create cloud-init custom user-data file (inline content)"
  ansible.builtin.copy:
    dest: "{{ proxmox_vm_templater_ci_user_data_file_path }}/{{ proxmox_vm_templater_ci_user_data_file_name }}"
    content: "{{ proxmox_vm_templater_ci_user_data_content }}"
  delegate_to: "{{ proxmox_vm_templater_delegate }}"
  when:
    - proxmox_vm_templater_ci_user_data_content is defined
- name: "Create cloud-init custom user-data file (src file)"
  ansible.builtin.copy:
    dest: "{{ proxmox_vm_templater_ci_user_data_file_path }}/{{ proxmox_vm_templater_ci_user_data_file_name }}"
    src: "{{ proxmox_vm_templater_ci_user_data_src_file }}"
  delegate_to: "{{ proxmox_vm_templater_delegate }}"
  when:
    - proxmox_vm_templater_ci_user_data_src_file is defined
- name: "Update cicustom fact"
  ansible.builtin.set_fact:
    proxmox_vm_templater_cicustom_fact: "user={{ proxmox_vm_templater_ci_user_data_volume }}:snippets/{{ proxmox_vm_templater_ci_user_data_file_name }}"
  when: (proxmox_vm_templater_ci_user_data_src_file is defined or proxmox_vm_templater_ci_user_data_content is defined)

- name: "Create cloud-init custom network-data file (inline content)"
  ansible.builtin.copy:
    dest: "{{ proxmox_vm_templater_ci_network_data_file_path }}/{{ proxmox_vm_templater_ci_network_data_file_name }}"
    content: "{{ proxmox_vm_templater_ci_network_data_content }}"
  delegate_to: "{{ proxmox_vm_templater_delegate }}"
  when:
    - proxmox_vm_templater_ci_network_data_content is defined
- name: "Create cloud-init custom networkdata file (src file)"
  ansible.builtin.copy:
    dest: "{{ proxmox_vm_templater_ci_network_data_file_path }}/{{ proxmox_vm_templater_ci_network_data_file_name }}"
    src: "{{ proxmox_vm_templater_ci_network_data_src_file }}"
  delegate_to: "{{ proxmox_vm_templater_delegate }}"
  when:
    - proxmox_vm_templater_ci_network_data_src_file is defined
- name: "Update cicustom fact"
  ansible.builtin.set_fact:
    proxmox_vm_templater_cicustom_fact: "{{ proxmox_vm_templater_cicustom_fact }},network={{ proxmox_vm_templater_ci_network_data_volume }}:snippets/{{ proxmox_vm_templater_ci_network_data_file_name }}"
  when: (proxmox_vm_templater_ci_network_data_src_file is defined or proxmox_vm_templater_ci_network_data_content is defined)

- name: "Handle cloud-init drive creation or update"
  block:
    - name: "Search for existing cloud-init drive"
      ansible.builtin.set_fact:
        cloudinit_drive: |
          {% set id = proxmox_vm_templater_storage ~ ':vm-' ~ proxmox_vm_templater_dest_id ~ '-cloudinit,media=cdrom' %}
          {% for k,v in vm_info.items() %}
          {% if id in v %}
          {{ k | trim }}
          {% endif %}
          {% endfor %}
    - name: "Assert cloud-init drive was found and is valid"
      ansible.builtin.assert:
        that:
          - cloudinit_drive is defined
          - cloudinit_drive | default('', true) | trim != ''
    - name: "Configure cloud-init options (refresh) (with qm utility)"
      command: "qm set {{ proxmox_vm_templater_dest_id }} --cicustom \"{{ proxmox_vm_templater_cicustom_fact }}\""
      delegate_to: "{{ proxmox_vm_templater_delegate }}"
    - name: "Detach cloud-init drive (with qm utility)"
      ansible.builtin.command: "qm set {{ proxmox_vm_templater_dest_id }} --{{ cloudinit_drive }} none,media=cdrom"
      delegate_to: "{{ proxmox_vm_templater_delegate }}"
    - name: "Attach cloud-init drive (with qm utility)"
      ansible.builtin.command: "qm set {{ proxmox_vm_templater_dest_id }} --{{ cloudinit_drive }} {{ proxmox_vm_templater_storage }}:cloudinit"
      delegate_to: "{{ proxmox_vm_templater_delegate }}"
  rescue:
    - name: "Create and attach cloud-init device (with qm utility)"
      ansible.builtin.command: "qm set {{ proxmox_vm_templater_dest_id }} --{{ proxmox_vm_templater_cloudinit_drive_id }} {{ proxmox_vm_templater_storage }}:cloudinit"
      delegate_to: "{{ proxmox_vm_templater_delegate }}"
    - name: "Configure cloud-init options (new) (with qm utility)"
      command: "qm set {{ proxmox_vm_templater_dest_id }} --cicustom \"{{ proxmox_vm_templater_cicustom_fact }}\""
      delegate_to: "{{ proxmox_vm_templater_delegate }}"